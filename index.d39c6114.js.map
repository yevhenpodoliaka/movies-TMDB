{"mappings":"AA2BA,SAASA,GAAiBC,GAAEA,EAAEC,cAAEA,EAAaC,OAAEA,EAAMC,OAAEA,EAAMC,SAAEA,IAC7D,MAAO,wBAAwBJ,kMAIVC,0BACTC,qCAEFE,yBCnCZ,IAAAC,EAAe,CACbC,QAASC,SAASC,cAAc,kBAChCC,KAAMF,SAASC,cAAc,SAC7BE,OAAQH,SAASC,cAAc,WAC/BG,KAAMJ,SAASC,cAAc,SAC7BI,aAAcL,SAASC,cAAc,iBACrCK,aAAcN,SAASC,cAAc,iBACrCM,KAAMP,SAASC,cAAc,kBAC7BO,SAAUR,SAASC,cAAc,aACjCQ,WAAYT,SAASC,cAAc,gBACnCS,WAAYV,SAASC,cAAc,iBACnCU,UAAWX,SAASC,cAAc,gB,ICmCpCW,EAxCA,MAMEC,qBACE,MAAMC,QAAiBC,MAEf,qHAASC,KAAKC,eAGtB,aADmBH,EAASI,QAChBC,QAEdN,kBAAkBO,GAChB,MAAMN,QAAiBC,MACiB,4FAAUK,KAGlD,aADmBN,EAASI,QAChBC,QAGdN,gBAAgBQ,GACd,MAAMP,QAAiBC,MACV,sCAASM,6DAGtB,aADmBP,EAASI,OAI9BI,gBACEN,KAAKC,aAAe,EAEtBM,gBACMP,KAAKC,YAAc,IACrBD,KAAKC,aAAe,GAlCxBO,cACER,KAAKS,QAAU,GACfT,KAAKC,YAAc,ICGvBJ,eAAea,IACb,MAAMC,QAAaC,EAAOC,eACpBC,QHyBkBC,EGzBcJ,EH0B/BI,EACJC,KACC,EAACvC,GACCA,EAAEwC,MACFA,EAAKC,YACLA,EAAWC,aACXA,EAAYC,aACZA,KACI,iCAAiC3C,qFAEnByC,kDACHD,oCACKE,wCACIC,6BAI3BC,KAAK,KAlBV,IAA0BN,EGxBxB,aAAaO,EAAwBR,GAXvCS,OAAOC,iBAAiB,mBAAoBd,GAC5C5B,EAAKI,KAAKsC,iBAAiB,SAe3B,WACEd,OAfF5B,EAAKK,OAAOqC,iBAAiB,SAkB7B,eAjBA1C,EAAKM,KAAKoC,iBAAiB,UAmB3B3B,eAA4B4B,GAC1BA,EAAEC,iBACF,MAAMC,EAAQF,EAAEG,OAAOC,SAASC,MAAMC,MAChCpB,QAAaC,EAAOoB,YAAYL,GAChCb,QAAeQ,EAAwBX,GAC7C,aAAasB,aAAanB,MAvB5BhC,EAAKO,aAAamC,iBAAiB,SA0BnC3B,iBACEe,EAAOL,gBACPG,IACAwB,QAAQC,IAAIvB,EAAOX,gBA5BrBnB,EAAKQ,aAAakC,iBAAiB,SA8BnC3B,iBACEe,EAAON,gBACPI,IACAwB,QAAQC,IAAIvB,EAAOX,gBAhCrBnB,EAAKC,QAAQyC,iBAAiB,SA0C9B3B,eAA2B4B,GACzB,GAAIA,EAAEG,OAAOQ,UAAUC,SAAS,iBAAkB,CAChD,MAAMC,EAASb,EAAEG,OAAOW,aAAa,MAC/B5B,QAAaC,EAAO4B,UAAUF,GACpCxD,EAAKU,SAAS4C,UAAUK,OAAO,mBAE/B,MAAM3B,QAAetC,EAAiBmC,SAVf+B,EAWC5B,OAV1BhC,EAAKU,SAASmD,UAAYD,IAD5B,IAA2BA,KA9B3B,MAAM9B,EAAS,IAAIhB,EA2BnB,SAAS0B,EAAwBoB,GAC/B5D,EAAKC,QAAQ4D,UAAYD","sources":["src/js/markup.js","src/js/refs.js","src/js/api-servise.js","src/js/app.js"],"sourcesContent":["const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n\n// backdrop_path: \"/egoyMDLqCxzjnSrWOz50uLlJWmD.jpg\"\n// belongs_to_collection: {id: 720879, name: \"Sonic the Hedgehog Collection\", poster_path: \"/rEC1pkQ1UbX7USRkVIrt2Nk7hlC.jpg\",…}\n// budget: 110000000\n// genres: [{id: 28, name: \"Action\"}, {id: 12, name: \"Adventure\"}, {id: 10751, name: \"Family\"},…]\n// homepage: \"https://www.sonicthehedgehogmovie.com\"\n// id: 675353\n// imdb_id: \"tt12412888\"\n// original_language: \"en\"\n// original_title: \"Sonic the Hedgehog 2\"\n// overview: \"After settling in Green Hills, Sonic is eager to prove he has what it takes to be a true hero. His test comes when Dr. Robotnik returns, this time with a new partner, Knuckles, in search for an emerald that has the power to destroy civilizations. Sonic teams up with his own sidekick, Tails, and together they embark on a globe-trotting journey to find the emerald before it falls into the wrong hands.\"\n// popularity: 3201.969\n// poster_path: \"/6DrHO1jr3qVrViUO6s6kFiAGM7.jpg\"\n// production_companies: [{id: 4, logo_path: \"/gz66EfNoYPqHTYI4q9UEN4CbHRc.png\", name: \"Paramount\", origin_country: \"US\"},…]\n// production_countries: [{iso_3166_1: \"JP\", name: \"Japan\"}, {iso_3166_1: \"US\", name: \"United States of America\"}]\n// release_date: \"2022-03-30\"\n// revenue: 393000000\n// runtime: 122\n// spoken_languages: [{english_name: \"English\", iso_639_1: \"en\", name: \"English\"}]\n// status: \"Released\"\n// tagline: \"Welcome to the next level.\"\n// title: \"Sonic the Hedgehog 2\"\n// video: false\n// vote_average: 7.7\n// vote_count: 2274\n\nfunction createMarkupCard({ id, backdrop_path, budget, genres, homepage }) {\n  return `<div class=\"card\" id=${id}>\n     <button id=\"close-modal\">close</button>\n  <button id=\"add-to-queue\">Add to queue</button>\n  <button id=\"add-wached\">Add Wached</button>\n  <img src=${IMG_URL}${backdrop_path} alt=\"\">\n  <p>budget ${budget}</p>\n  <p>genres</p>\n  <a href=${homepage}>homepage</a>\n</div>`;\n}\n\nfunction createMarkupList(arr) {\n  return arr\n    .map(\n      ({\n        id,\n        title,\n        poster_path,\n        release_date,\n        vote_average,\n      }) => `<li class=\"gallery__item\" id=\"${id}\">\n      <div class=\"info-wrap\">\n    <img src= ${IMG_URL}${poster_path} alt=\"\" class=\"poster\">\n    <p class=\"title\">${title}</p>\n    <p class=\"date\">Date: ${release_date}</p>\n    <p class=\"rating\">Rating :${vote_average}</p>\n    </div>\n</li>`\n    )\n    .join('');\n}\n\nexport { createMarkupCard, createMarkupList };\n","export default {\n  gallery: document.querySelector('.gallery__list'),\n  home: document.querySelector('#home'),\n  libary: document.querySelector('#libary'),\n  form: document.querySelector('#form'),\n  decrementBtn: document.querySelector('#decrementBtn'),\n  incrementBtn: document.querySelector('#incrementBtn'),\n  card: document.querySelector('.gallery__item'),\n  backdrop: document.querySelector('#backdrop'),\n  closeModal: document.querySelector('#close-modal'),\n  addToQueue: document.querySelector('#add-to-queue'),\n  addWached: document.querySelector('#add-wached'),\n};\n","const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"?api_key=b6201d5209ec246f483ea16253167a90\";\nconst IMG_URL = \"https://image.tmdb.org/t/p/w500/\";\nconst URL = BASE_URL + \"discover/movie\" + API_KEY + \"&sort_by=popularity.desc\";\n// \"https://api.themoviedb.org/3/discover/movie?api_key=<<api_key>>\n// & language=en-US & sort_by=popularity.desc & include_adult=false & include_video=false & page=1 & with_watch_monetization_types=flatrate\"\nclass Search {\n  constructor() {\n    this.allPage = [];\n    this.currentPage = 1;\n  }\n\n  async fetchPopular() {\n    const response = await fetch(\n      // BASE_URL + \"movie/popular\" + API_KEY + `&page=${this.currentPage}`\n      URL + `&page=${this.currentPage}`\n    );\n    const data = await response.json();\n    return data.results;\n  }\n  async fetchByWord(word) {\n    const response = await fetch(\n      BASE_URL + \"search/movie\" + API_KEY + `&query=${word}`\n    );\n    const data = await response.json();\n    return data.results;\n  }\n\n  async fetchById(movieId) {\n    const response = await fetch(\n      BASE_URL + `movie/${movieId}` + API_KEY + \"&language=en-US\"\n    );\n    const data = await response.json();\n    return data;\n  }\n\n  incrementPage() {\n    this.currentPage += 1;\n  }\n  decrementPage() {\n    if (this.currentPage > 1) {\n      this.currentPage -= 1;\n    }\n  }\n}\n\nexport default Search;\n","import { createMarkupCard, createMarkupList } from './markup';\nimport refs from './refs';\nimport Search from './api-servise';\n\nwindow.addEventListener('DOMContentLoaded', onHomePage);\nrefs.home.addEventListener('click', onClickBtnHome);\nrefs.libary.addEventListener('click', onClickBtnLibary);\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.decrementBtn.addEventListener('click', onDecrementBtnClick);\nrefs.incrementBtn.addEventListener('click', onIncrementBtnClick);\nrefs.gallery.addEventListener('click', onCardClick);\n\nasync function onHomePage() {\n  const data = await search.fetchPopular();\n  const markup = await createMarkupList(data);\n  return await uppendMarkapGalleryList(markup);\n}\n\nconst search = new Search();\n\nfunction onClickBtnHome() {\n  onHomePage();\n}\n\nfunction onClickBtnLibary() {}\n\nasync function onFormSubmit(e) {\n  e.preventDefault();\n  const query = e.target.elements.input.value;\n  const data = await search.fetchByWord(query);\n  const markup = await uppendMarkapGalleryList(data);\n  return await uppendMarkap(markup);\n}\n\nasync function onDecrementBtnClick() {\n  search.decrementPage();\n  onHomePage();\n  console.log(search.currentPage);\n}\nasync function onIncrementBtnClick() {\n  search.incrementPage();\n  onHomePage();\n  console.log(search.currentPage);\n}\n\nfunction uppendMarkapGalleryList(string) {\n  refs.gallery.innerHTML = string;\n}\nfunction uppendMarkapModal(string) {\n  refs.backdrop.innerHTML = string;\n}\n// ------Modal----------------\nasync function onCardClick(e) {\n  if (e.target.classList.contains('gallery__item')) {\n    const filmId = e.target.getAttribute('id');\n    const data = await search.fetchById(filmId);\n    refs.backdrop.classList.remove('visually-hidden');\n\n    const markup = await createMarkupCard(data);\n    await uppendMarkapModal(markup);\n  }\n}\n//  refs.closeModal.addEventListener('click', onBtnCloseModalClick);\n// refs.addToQueue.addEventListener('click', onBtnAddToQueueClick);\n// refs.addWached.addEventListener('click', onBtnAddWachedClick);\nfunction onBtnCloseModalClick() {\n  refs.backdrop.classList.add('visually-hidden');\n}\n"],"names":["$263aef85a4d00bfb$export$98f2023ceafec56e","id","backdrop_path","budget","genres","homepage","$ee27a4d7c64fc8c4$export$2e2bcd8739ae039","gallery","document","querySelector","home","libary","form","decrementBtn","incrementBtn","card","backdrop","closeModal","addToQueue","addWached","$73417752614b6260$export$2e2bcd8739ae039","async","response","fetch","this","currentPage","json","results","word","movieId","incrementPage","decrementPage","constructor","allPage","$ce77af30fc9a6e63$var$onHomePage","data","$ce77af30fc9a6e63$var$search","fetchPopular","markup","arr","map","title","poster_path","release_date","vote_average","join","$ce77af30fc9a6e63$var$uppendMarkapGalleryList","window","addEventListener","e","preventDefault","query","target","elements","input","value","fetchByWord","uppendMarkap","console","log","classList","contains","filmId","getAttribute","fetchById","remove","string","innerHTML"],"version":3,"file":"index.d39c6114.js.map"}